    #--fontlist 'Arial+Arial Bold+Arial Bold Italic+Arial Italic+Calibri+Calibri Bold+Calibri Bold Italic+Calibri Italic+Courier New+Georgia+Georgia Bold+Georgia Bold Italic+Georgia Italic+Life BT+Myriad Pro+Myriad Pro Bold Condensed+Myriad Pro Italic+Tahoma+Tahoma Bold+Times New Roman,+Times New Roman, Bold+Times New Roman, Bold Italic+Times New Roman, Italic+Trebuchet MS+Trebuchet MS Bold+Trebuchet MS Bold Italic+Trebuchet MS Italic+Verdana+Verdana Bold+Verdana Bold Italic+Verdana Italic+Worcester Round Becker Med' \
To try:
Kill BOX_PADDING
Increase CHAR_SPACING (see what it should be)
- see if this fixes the APPLY_BOXES errors

# Training notes:
# * Best work for tess training seems to be having BOX_PADDING=0, LEADING=8 (ie lines closer together)
# * Less fonts seems to work better for the shape tables etc - perhaps train per-font?
# * numbers file really makes a different with verse refs
# * Having loads of text to train with doesnt seem to do much


# To debug what tesseract 'sees':
SCROLLVIEW_PATH=/home/mark/Downloads/tesseract-3.03.02/java tesseract -c interactive_display_mode=T -l tur tmp-cropped_masked/013.png -

# Changes on a new install:

# Edit tesstrain.sh and set:
# make sure nothing of the word is cut off
BOX_PADDING="1"
# Tie lines closer to each other for more realism
LEADING="8"
# Change ligatures like ff etc into utf8 single char that then maps to 2 chars
        common_args+=" --ligatures=1"

#######################
# For Mark to generate the text files from all tr ebooks we have:
in ~/Documents/Work\ Abroad/Turkey/Books
mod2vpl TurNTB | perl -pe 's/<[^>]+>//g' > txt/turntb.txt

# Convert all books to text
perl generate-text.pl

######################
# Ensure that the tesseract sources for training etc have been checked out correctly
git clone https://code.google.com/p/tesseract-ocr.langdata/
set $LANGDATA to this path
LANGDATA=/home/bookscanner/tesseract/tesseract-ocr.langdata
svn co http://tesseract-ocr.googlecode.com/svn/trunk/ tesseract-src
configure and then go into training directory and just build/install there.
set $TRAINPATH to be this path/training eg
TRAINPATH=/home/bookscanner/tesseract/tesseract-src/training

#mark
LANGDATA=~/tmp/tesseract-ocr.langdata
TRAINPATH=~/tmp/tesseract-ocr/training

######################
# Every time:

perl generate_chars_for_training.pl turkish_books_txt/*.txt > hasat_tur/training
perl generate_wordlist.pl turkish_books_txt/*.txt > hasat_tur/wordlist

# For details of the below see the pretty poor documentation at https://code.google.com/p/tesseract-ocr/wiki/TrainingTesseract3
mkdir -p /tmp/tesstrain/tessdata/

# Create the lists of ambiguous characters
perl -ne 'BEGIN{print "v2\n"} if( !/^v1/ ){ s/ //g; @F=split /\t/; print "$F[1] $F[3] $F[4]" }' $LANGDATA/common.unicharambigs > hasat_tur/hasat_tur.unicharambigs
cat hasat_tur/extraambigs >> hasat_tur/hasat_tur.unicharambigs

# copy any fonts from 
TESSDATA_PREFIX=/usr/share/tesseract-ocr/tessdata/ $TRAINPATH/tesstrain.sh --lang hasat_tur --bin_dir /usr/bin --langdata_dir $LANGDATA \
    --fonts_dir fonts \
    --fontlist 'Arial+Arial Bold+Arial Italic+Calibri+Calibri Bold+Calibri Italic+Courier New+Times New Roman,+Times New Roman, Bold+Times New Roman, Bold Italic+Times New Roman, Italic+Verdana+Verdana Bold' \
    --overwrite \
    --training_text 'hasat_tur/training' \
    --wordlist hasat_tur/wordlist


# Add in extra files now
cp hasat_tur/hasat_tur.unicharambigs /tmp/tesstrain/hasat_tur/
wordlist2dawg hasat_tur/hasat_tur.number /tmp/tesstrain/hasat_tur/hasat_tur.number-dawg /tmp/tesstrain/hasat_tur/hasat_tur.unicharset
wordlist2dawg hasat_tur/hasat_tur.punc /tmp/tesstrain/hasat_tur/hasat_tur.punc-dawg /tmp/tesstrain/hasat_tur/hasat_tur.unicharset
combine_tessdata /tmp/tesstrain/hasat_tur/hasat_tur.

sudo cp /tmp/tesstrain/hasat_tur/hasat_tur.traineddata /usr/share/tesseract-ocr/tessdata/hasat_tur.traineddata
